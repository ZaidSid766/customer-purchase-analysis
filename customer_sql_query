-- -------------------------------------------------------------
-- üè™ Customer Behaviour Analysis Project (MySQL)
-- -------------------------------------------------------------
-- This script creates a database, defines the 'customer' table,
-- and performs various analytical SQL queries.
-- Each section is properly commented for clarity.
-- -------------------------------------------------------------

-- Step 1Ô∏è‚É£: Create a new database for analysis
CREATE DATABASE customer_behaviour;

-- Step 2Ô∏è‚É£: Display all available databases to confirm creation
SHOW DATABASES;

-- Step 3Ô∏è‚É£: Configure authentication for root user
-- (Useful if you face MySQL Workbench connection issues)
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'Silent@786';

-- Step 4Ô∏è‚É£: Apply the privilege changes
FLUSH PRIVILEGES;

-- Step 5Ô∏è‚É£: Use the newly created database
USE customer_behaviour;

-- -------------------------------------------------------------
-- Step 6Ô∏è‚É£: Create the 'customer' table structure
-- -------------------------------------------------------------
CREATE TABLE customer (
    customer_id INT PRIMARY KEY,                      -- Unique ID for each customer
    age INT,                                          -- Age of customer
    gender VARCHAR(10),                               -- Gender (Male/Female)
    item_purchased VARCHAR(100),                      -- Product name
    category VARCHAR(50),                             -- Product category (Clothing, Electronics, etc.)
    purchase_amount DECIMAL(10,2),                    -- Amount spent per purchase
    location VARCHAR(100),                            -- City or region
    size VARCHAR(10),                                 -- Product size (if applicable)
    color VARCHAR(20),                                -- Product color
    season VARCHAR(20),                               -- Season of purchase (Summer, Winter, etc.)
    review_rating DECIMAL(3,1),                       -- Product rating (1.0‚Äì5.0)
    subscription_status VARCHAR(20),                  -- Whether user is subscribed (Yes/No)
    shipping_type VARCHAR(20),                        -- Shipping type (Standard/Express)
    discount_applied DECIMAL(5,2),                    -- Discount percentage applied
    previous_purchases INT,                           -- Total number of previous purchases
    payment_method VARCHAR(50),                       -- Payment mode (Card, UPI, COD, etc.)
    frequency_of_purchases INT,                       -- Frequency of purchases per month
    age_group VARCHAR(20),                            -- Derived field: age segment (Adult, Senior, etc.)
    purchase_frequency_days INT                       -- Days between purchases
);

-- Step 7Ô∏è‚É£: Verify table structure and check if data is inserted later
SELECT * FROM customer;

-- -------------------------------------------------------------
-- üìä Business Analysis Queries
-- -------------------------------------------------------------

-- Q1Ô∏è‚É£. What is the total revenue generated by male vs. female customers?
SELECT gender, 
       SUM(purchase_amount) AS revenue
FROM customer
GROUP BY gender;
-- This query compares total spending across gender segments.

-- Q2Ô∏è‚É£. Which customers used a discount but still spent more than the average purchase amount?
SELECT customer_id, purchase_amount 
FROM customer 
WHERE discount_applied = 'Yes' 
  AND purchase_amount >= (SELECT AVG(purchase_amount) FROM customer);
-- Helps identify big spenders who still used discounts (useful for marketing).

-- Q3Ô∏è‚É£. Which are the top 5 products with the highest average review rating?
SELECT item_purchased, 
       ROUND(AVG(CAST(review_rating AS DECIMAL(10,2))), 2) AS `Average Product Rating`
FROM customer
GROUP BY item_purchased
ORDER BY `Average Product Rating` DESC
LIMIT 5;
-- Finds top-rated products based on customer feedback.

-- Q4Ô∏è‚É£. Compare the average Purchase Amounts between Standard and Express Shipping.
SELECT shipping_type, 
       ROUND(AVG(purchase_amount),2) AS avg_purchase
FROM customer
WHERE shipping_type IN ('Standard','Express')
GROUP BY shipping_type;
-- Evaluates how shipping speed influences spending behavior.

-- Q5Ô∏è‚É£. Do subscribed customers spend more? Compare average spend and total revenue.
SELECT subscription_status,
       COUNT(customer_id) AS total_customers,
       ROUND(AVG(purchase_amount),2) AS avg_spend,
       ROUND(SUM(purchase_amount),2) AS total_revenue
FROM customer
GROUP BY subscription_status
ORDER BY total_revenue, avg_spend DESC;
-- Compares the impact of subscription on total and average revenue.

-- Q6Ô∏è‚É£. Which 5 products have the highest percentage of purchases with discounts applied?
SELECT item_purchased,
       ROUND(100.0 * SUM(CASE WHEN discount_applied = 'Yes' THEN 1 ELSE 0 END)/COUNT(*),2) AS discount_rate
FROM customer
GROUP BY item_purchased
ORDER BY discount_rate DESC
LIMIT 5;
-- Helps identify products that heavily rely on discounts for sales.

-- Q7Ô∏è‚É£. Segment customers into New, Returning, and Loyal based on previous purchases.
WITH customer_type AS (
    SELECT customer_id, previous_purchases,
           CASE 
               WHEN previous_purchases = 1 THEN 'New'
               WHEN previous_purchases BETWEEN 2 AND 10 THEN 'Returning'
               ELSE 'Loyal'
           END AS customer_segment
    FROM customer
)
SELECT customer_segment, COUNT(*) AS "Number of Customers"
FROM customer_type
GROUP BY customer_segment;
-- Classifies customers into loyalty categories for retention strategies.

-- Q8Ô∏è‚É£. What are the top 3 most purchased products within each category?
WITH item_counts AS (
    SELECT category,
           item_purchased,
           COUNT(customer_id) AS total_orders,
           ROW_NUMBER() OVER (PARTITION BY category ORDER BY COUNT(customer_id) DESC) AS item_rank
    FROM customer
    GROUP BY category, item_purchased
)
SELECT item_rank, category, item_purchased, total_orders
FROM item_counts
WHERE item_rank <= 3;
-- Ranks and retrieves top 3 popular items per category.

-- Q9Ô∏è‚É£. Are customers who are repeat buyers (more than 5 previous purchases) also likely to subscribe?
SELECT subscription_status,
       COUNT(customer_id) AS repeat_buyers
FROM customer
WHERE previous_purchases > 5
GROUP BY subscription_status;
-- Checks correlation between repeat purchase behavior and subscription.

-- üîü Q10. What is the revenue contribution of each age group?
SELECT age_group,
       SUM(purchase_amount) AS total_revenue
FROM customer
GROUP BY age_group
ORDER BY total_revenue DESC;
-- Analyzes which age segment contributes most to total revenue.

-- -------------------------------------------------------------
-- ‚úÖ End of Script
-- -------------------------------------------------------------
-- This SQL file performs complete data analysis for customer
-- shopping behavior, ready to integrate with Power BI or Python.
-- -------------------------------------------------------------
